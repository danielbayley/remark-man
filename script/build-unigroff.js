/**
 * @author Titus Wormer
 * @copyright 2015 Titus Wormer
 * @license MIT
 * @module remark:man:script:build-unigroff
 * @fileoverview Compile a mapping of unicode characters
 *   to groff-commands.
 */

'use strict';

/* eslint-env node */

/*
 * Dependencies.
 */

var fs = require('fs');
var dsv = require('d3-dsv');

/*
 * Constants.
 */

var INPUT = 'script/uniglyph.text';
var OUTPUT = 'lib/uniglyph.json';
var EXPRESSION = 'lib/expression.js';
var TEST = 'test/fixtures/entities.7/input.md';

/**
 * Escape `value`.
 *
 * @param {string} value - Value to escape.
 * @return {string} - Escaped `value`.
 */
function charEscape(value) {
    var result = [];
    var length = value.length;
    var index = -1;
    var hexadecimal;
    var character;
    var longhand;

    while (++index < length) {
        character = value.charAt(index);

        if (/\w/.test(character)) {
            result[index] = character;
            continue;
        }

        hexadecimal = value.charCodeAt(index).toString(16).toUpperCase();
        longhand = hexadecimal.length > 2;

        result[index] = '\\' + (longhand ? 'u' : 'x') +
            ('0000' + hexadecimal).slice(longhand ? -4 : -2);
    }

    return result.join('');
}

/*
 * Read.
 */

var doc = fs.readFileSync(INPUT, 'utf-8');

/*
 * Parse.
 */

var map = {};

dsv.tsvParse(doc).forEach(function (row) {
    var characters = row.unicode.split('_').map(function (point) {
        return String.fromCharCode(parseInt(point, 16));
    }).join('');

    if (characters === row.glyph) {
        return;
    }

    map[characters] = row.glyph;
});

/*
 * Compile.
 */

var expression = new RegExp(Object.keys(map).sort(function (a, b) {
    return a.length > b.length ? -1 : 1;
}).map(charEscape).join('|'), 'g');

var list = '*   `' + Object.keys(map).map(function (characters) {
    return characters === '`' ? ' ` ' : characters;
}).join('`\n*   `') + '`';

/*
 * Write.
 */

fs.writeFileSync(OUTPUT, JSON.stringify(map, 0, 2) + '\n');

fs.writeFileSync(EXPRESSION, [
    '/* This file is generated by `script/build-unigroff.js` */',
    '\'use strict\';',
    '',
    '/* eslint-env commonjs */',
    '',
    'module.exports = ' + expression + ';'
].join('\n') + '\n');

fs.writeFileSync(TEST, [
    '<!-- This file is generated by `script/build-unigroff.js` -->',
    '',
    '# roff_entities(7) -- list of roffable entities',
    '',
    list
].join('\n') + '\n');
